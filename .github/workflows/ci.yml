name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
        with:
          restore-cache: "false"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

  validate-code:
    name: Validate Code
    runs-on: ubuntu-latest
    needs: install
    strategy:
      fail-fast: false
      matrix:
        task:
          - name: "Type Check"
            command: "pnpm check-types"
          - name: "Lint"
            command: "pnpm lint"
          - name: "Format Check"
            command: "pnpm format --check"
          - name: "Test"
            command: "pnpm test"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm with cache
        uses: ./.github/actions/setup-node-pnpm

      - name: Run ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [validate-code]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm with cache
        uses: ./.github/actions/setup-node-pnpm

      - name: Build packages
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            apps/*/dist
          retention-days: 7

  commitlint:
    name: Commit Lint
    runs-on: ubuntu-latest
    needs: install
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js and pnpm with cache
        uses: ./.github/actions/setup-node-pnpm

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to HEAD --verbose

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm with cache
        uses: ./.github/actions/setup-node-pnpm

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for unused dependencies
        run: pnpm cleanup --reporter json > knip-report.json || true

      - name: Upload knip report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: knip-report
          path: knip-report.json
          retention-days: 7
